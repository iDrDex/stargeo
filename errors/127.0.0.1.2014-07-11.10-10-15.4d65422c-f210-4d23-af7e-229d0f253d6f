(dp1
S'output'
p2
S'<class \'gluon.contrib.pg8000.errors.ProgrammingError\'> (\'ERROR\', \'42P01\', \'relation "series_annotation" does not exist\')'
p3
sS'layer'
p4
S'/Users/dex/Copy/web2py/applications/star/models/my_db.py'
p5
sS'code'
p6
S'__author__ = \'dex\'\nresponse.generic_patterns = [\'.html\']\ndb._common_fields.append(auth.signature)\n\nSeries = db.define_table(\'series\',\n                         Field(\'gse_name\'),\n                         format=\'%(gse_name)s\',\n                         migrate=\'series.table\'\n)\n\nSeries_Attribute = db.define_table(\'series_attribute\',\n                         Field(\'series_id\', \'reference series\'),\n                         Field(\'name\'),\n                         Field(\'value\'),\n                         format=\'%(name)s_%(value)s\',\n                         migrate=\'series_attribute.table\'\n)\n\nSample = db.define_table(\'sample\',\n                         Field(\'gsm_name\'),\n                         format=\'%(gsm_name)s\',\n                         migrate=\'sample.table\'\n)\n\nSample_Attribute = db.define_table(\'sample_attribute\',\n                         Field(\'sample_id\', \'reference sample\'),\n                         Field(\'name\'),\n                         Field(\'value\'),\n                         format=\'%(name)s_%(value)s\',\n                         migrate=\'sample_attribute.table\'\n)\n\n\nPlatform = db.define_table(\'platform\',\n                         Field(\'gpl_name\'),\n                         format=\'%(gpl_name)s\',\n                         migrate=\'platform.table\'\n)\n\nPlatform_Attribute = db.define_table(\'platform_attribute\',\n                         Field(\'platform_id\', \'reference platform\'),\n                         Field(\'name\'),\n                         Field(\'value\'),\n                         format=\'%(name)s_%(value)s\',\n                         migrate=\'platform_attribute.table\'\n)\n\n\nSearch = db.define_table(\'search\',\n                         Field(\'query\'),\n                         format=\'%(query)s\',\n                         migrate=\'search.table\'\n)\n\nAnnotation = db.define_table(\'annotation\',\n                             Field(\'name\', unique=True),\n                             Field(\'description\'),\n                             format=\'%(name)s\',\n                             migrate=\'annotation.table\'\n)\n\nSeries_Annotation = db.define_table(\'series_annotation\',\n                                   Field(\'series_id\', \'reference series\'),\n                                   Field(\'platform_id\', \'reference platform\'),\n                                   Field(\'annotation_id\', \'reference annotation\'),\n                                   Field(\'col\'),\n                                   Field(\'regex\'),\n                                   format=\'%(col)s_%(regex)s\',\n                                   migrate="series_annotation.table"\n)\n\nSample_Annotation = db.define_table(\'sample_annotation\',\n                                    Field(\'series_annotation_id\', \'reference series_annotation\'),\n                                    Field(\'platform_id\', \'reference platform\'),\n                                    Field(\'sample_id\', \'reference sample\'),\n                                    Field(\'feature\'),\n                                    format=\'%(gsm_name)s\',\n                                    migrate="sample_annotation.table"\n)'
p7
sS'snapshot'
p8
(dp9
S'exception'
p10
(dp11
S'__module__'
p12
S"'gluon.contrib.pg8000.errors'"
p13
sS'__getslice__'
p14
S"<method-wrapper '__getslice__' of ProgrammingError object>"
p15
sS'__str__'
p16
S"<method-wrapper '__str__' of ProgrammingError object>"
p17
sS'__reduce__'
p18
S'<built-in method __reduce__ of ProgrammingError object>'
p19
sS'__dict__'
p20
S'{}'
p21
sS'__sizeof__'
p22
S'<built-in method __sizeof__ of ProgrammingError object>'
p23
sS'__weakref__'
p24
S'None'
p25
sS'__init__'
p26
S"<method-wrapper '__init__' of ProgrammingError object>"
p27
sS'__setattr__'
p28
S"<method-wrapper '__setattr__' of ProgrammingError object>"
p29
sS'__reduce_ex__'
p30
S'<built-in method __reduce_ex__ of ProgrammingError object>'
p31
sS'__new__'
p32
S'<built-in method __new__ of type object>'
p33
sS'__format__'
p34
S'<built-in method __format__ of ProgrammingError object>'
p35
sS'__class__'
p36
S"<class 'gluon.contrib.pg8000.errors.ProgrammingError'>"
p37
sS'__doc__'
p38
S'None'
p39
sS'__getitem__'
p40
S"<method-wrapper '__getitem__' of ProgrammingError object>"
p41
sS'__setstate__'
p42
S'<built-in method __setstate__ of ProgrammingError object>'
p43
sS'__getattribute__'
p44
S"<method-wrapper '__getattribute__' of ProgrammingError object>"
p45
sS'args'
p46
S'(\'ERROR\', \'42P01\', \'relation "series_annotation" does not exist\')'
p47
sS'__subclasshook__'
p48
S'<built-in method __subclasshook__ of type object>'
p49
sS'__unicode__'
p50
S'<built-in method __unicode__ of ProgrammingError object>'
p51
sS'__delattr__'
p52
S"<method-wrapper '__delattr__' of ProgrammingError object>"
p53
sS'__repr__'
p54
S"<method-wrapper '__repr__' of ProgrammingError object>"
p55
sS'__hash__'
p56
S"<method-wrapper '__hash__' of ProgrammingError object>"
p57
ssS'evalue'
p58
S'(\'ERROR\', \'42P01\', \'relation "series_annotation" does not exist\')'
p59
sS'request'
p60
cgluon.html
XML_unpickle
p61
(S's>S\x00\x00<div><table><tr><td style="font-weight:bold;vertical-align:top;">ajax</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">application</td><td style="vertical-align:top;">:</td><td><div>star</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">args</td><td style="vertical-align:top;">:</td><td><div><table></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">cid</td><td style="vertical-align:top;">:</td><td><div>None</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">client</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">controller</td><td style="vertical-align:top;">:</td><td><div>default</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">cookies</td><td style="vertical-align:top;">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top;">session_id_init</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1-9e6192d7-1ab7-4a3b-95ee-70a0df6ca9e1<table><tr><td style="font-weight:bold;vertical-align:top;">comment</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">domain</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">expires</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">httponly</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">max-age</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">path</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">secure</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">version</td><td style="vertical-align:top;">:</td><td><div></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_id_star</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1-4fe8bfd0-8ce0-4bac-98a0-6f75c95c8d99<table><tr><td style="font-weight:bold;vertical-align:top;">comment</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">domain</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">expires</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">httponly</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">max-age</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">path</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">secure</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">version</td><td style="vertical-align:top;">:</td><td><div></div></td></tr></table></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">env</td><td style="vertical-align:top;">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top;">HTTP_ACCEPT</td><td style="vertical-align:top;">:</td><td><div>text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_ACCEPT_ENCODING</td><td style="vertical-align:top;">:</td><td><div>gzip, deflate</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_ACCEPT_LANGUAGE</td><td style="vertical-align:top;">:</td><td><div>en-us</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_CONNECTION</td><td style="vertical-align:top;">:</td><td><div>keep-alive</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_COOKIE</td><td style="vertical-align:top;">:</td><td><div>__utma=96992031.595755714.1403417871.1404752422.1405098346.6; __utmb=96992031.1.10.1405098346; __utmc=96992031; __utmz=96992031.1403417871.1.1.utmcsr=(direct)|utmccn=(direct)|utmcmd=(none); session_id_init=127.0.0.1-9e6192d7-1ab7-4a3b-95ee-70a0df6ca9e1; session_id_star=127.0.0.1-4fe8bfd0-8ce0-4bac-98a0-6f75c95c8d99</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_HOST</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1:8000</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_USER_AGENT</td><td style="vertical-align:top;">:</td><td><div>Mozilla/5.0 (Macintosh; Intel Mac OS X 10_9_4) AppleWebKit/537.77.4 (KHTML, like Gecko) Version/7.0.5 Safari/537.77.4</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">PATH_INFO</td><td style="vertical-align:top;">:</td><td><div>/star</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">QUERY_STRING</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">REMOTE_ADDR</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">REMOTE_PORT</td><td style="vertical-align:top;">:</td><td><div>51270</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">REQUEST_METHOD</td><td style="vertical-align:top;">:</td><td><div>GET</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">SCRIPT_NAME</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">SERVER_NAME</td><td style="vertical-align:top;">:</td><td><div>dex-mbp10_8</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">SERVER_PORT</td><td style="vertical-align:top;">:</td><td><div>8000</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">SERVER_PROTOCOL</td><td style="vertical-align:top;">:</td><td><div>HTTP/1.1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">SERVER_SOFTWARE</td><td style="vertical-align:top;">:</td><td><div>Rocket 1.2.6</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">app_folders</td><td style="vertical-align:top;">:</td><td><div>set([&#x27;/Users/dex/Copy/web2py/applications/init/&#x27;, &#x27;/Users/dex/Copy/web2py/applications/star/&#x27;])</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">applications_parent</td><td style="vertical-align:top;">:</td><td><div>/Users/dex/Copy/web2py</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">cmd_args</td><td style="vertical-align:top;">:</td><td><div><table></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">cmd_options</td><td style="vertical-align:top;">:</td><td><div>&lt;Values at 0x1041783f8: {&#x27;verbose&#x27;: False, &#x27;ip&#x27;: &#x27;127.0.0.1&#x27;, &#x27;debuglevel&#x27;: 30, &#x27;with_scheduler&#x27;: False, &#x27;ips&#x27;: [], &#x27;shutdown_timeout&#x27;: 5, &#x27;taskbar&#x27;: False, &#x27;with_coverage&#x27;: False, &#x27;port&#x27;: 8000, &#x27;maxthreads&#x27;: None, &#x27;softcron&#x27;: False, &#x27;server_name&#x27;: &#x27;dex-mbp10_8&#x27;, &#x27;bpython&#x27;: False, &#x27;nogui&#x27;: False, &#x27;pid_filename&#x27;: &#x27;httpserver.pid&#x27;, &#x27;extcron&#x27;: False, &#x27;runcron&#x27;: False, &#x27;run_system_tests&#x27;: False, &#x27;test&#x27;: None, &#x27;folder&#x27;: &#x27;/Users/dex/Copy/web2py&#x27;, &#x27;config&#x27;: &#x27;&#x27;, &#x27;minthreads&#x27;: None, &#x27;shell&#x27;: None, &#x27;run&#x27;: &#x27;&#x27;, &#x27;log_filename&#x27;: &#x27;httpserver.log&#x27;, &#x27;profiler_dir&#x27;: None, &#x27;args&#x27;: [&#x27;&#x27;], &#x27;socket_timeout&#x27;: 5, &#x27;ssl_ca_certificate&#x27;: None, &#x27;scheduler&#x27;: None, &#x27;interfaces&#x27;: None, &#x27;ssl_private_key&#x27;: &#x27;&#x27;, &#x27;scheduler_groups&#x27;: None, &#x27;password&#x27;: &#x27;&lt;ask&gt;&#x27;, &#x27;request_queue_size&#x27;: 5, &#x27;ssl_certificate&#x27;: &#x27;&#x27;, &#x27;cronjob&#x27;: False, &#x27;numthreads&#x27;: None, &#x27;quiet&#x27;: False, &#x27;import_models&#x27;: False, &#x27;timeout&#x27;: 10, &#x27;plain&#x27;: False, &#x27;nobanner&#x27;: False}&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">db_sessions</td><td style="vertical-align:top;">:</td><td><div>set([])</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">debugging</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">gluon_parent</td><td style="vertical-align:top;">:</td><td><div>/Users/dex/Copy/web2py</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_accept</td><td style="vertical-align:top;">:</td><td><div>text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_accept_encoding</td><td style="vertical-align:top;">:</td><td><div>gzip, deflate</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_accept_language</td><td style="vertical-align:top;">:</td><td><div>en-us</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_connection</td><td style="vertical-align:top;">:</td><td><div>keep-alive</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_cookie</td><td style="vertical-align:top;">:</td><td><div>__utma=96992031.595755714.1403417871.1404752422.1405098346.6; __utmb=96992031.1.10.1405098346; __utmc=96992031; __utmz=96992031.1403417871.1.1.utmcsr=(direct)|utmccn=(direct)|utmcmd=(none); session_id_init=127.0.0.1-9e6192d7-1ab7-4a3b-95ee-70a0df6ca9e1; session_id_star=127.0.0.1-4fe8bfd0-8ce0-4bac-98a0-6f75c95c8d99</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_host</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1:8000</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_user_agent</td><td style="vertical-align:top;">:</td><td><div>Mozilla/5.0 (Macintosh; Intel Mac OS X 10_9_4) AppleWebKit/537.77.4 (KHTML, like Gecko) Version/7.0.5 Safari/537.77.4</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_jython</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_pypy</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_source</td><td style="vertical-align:top;">:</td><td><div>True</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">local_hosts</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div>dex-mbp10_8</div></td></tr><tr><td><div>::1</div></td></tr><tr><td><div>::ffff:127.0.0.1</div></td></tr><tr><td><div>127.0.0.1</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">path_info</td><td style="vertical-align:top;">:</td><td><div>/star</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">query_string</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">remote_addr</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">remote_port</td><td style="vertical-align:top;">:</td><td><div>51270</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">request_method</td><td style="vertical-align:top;">:</td><td><div>GET</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">request_uri</td><td style="vertical-align:top;">:</td><td><div>/star</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">script_name</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">server_name</td><td style="vertical-align:top;">:</td><td><div>dex-mbp10_8</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">server_port</td><td style="vertical-align:top;">:</td><td><div>8000</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">server_protocol</td><td style="vertical-align:top;">:</td><td><div>HTTP/1.1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">server_software</td><td style="vertical-align:top;">:</td><td><div>Rocket 1.2.6</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">web2py_path</td><td style="vertical-align:top;">:</td><td><div>/Users/dex/Copy/web2py</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">web2py_version</td><td style="vertical-align:top;">:</td><td><div>2.9.5-stable+timestamp.2014.03.16.02.35.39</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.errors</td><td style="vertical-align:top;">:</td><td><div>&lt;open file &#x27;&lt;stderr&gt;&#x27;, mode &#x27;w&#x27; at 0x1002951e0&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.file_wrapper</td><td style="vertical-align:top;">:</td><td><div>&lt;class wsgiref.util.FileWrapper at 0x103e431f0&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.input</td><td style="vertical-align:top;">:</td><td><div>&lt;socket._fileobject object at 0x10e96dbd0&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.multiprocess</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.multithread</td><td style="vertical-align:top;">:</td><td><div>True</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.run_once</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.url_scheme</td><td style="vertical-align:top;">:</td><td><div>http</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.version</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div>1</div></td></tr><tr><td><div>0</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_errors</td><td style="vertical-align:top;">:</td><td><div>&lt;open file &#x27;&lt;stderr&gt;&#x27;, mode &#x27;w&#x27; at 0x1002951e0&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_file_wrapper</td><td style="vertical-align:top;">:</td><td><div>&lt;class wsgiref.util.FileWrapper at 0x103e431f0&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_input</td><td style="vertical-align:top;">:</td><td><div>&lt;socket._fileobject object at 0x10e96dbd0&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_multiprocess</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_multithread</td><td style="vertical-align:top;">:</td><td><div>True</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_run_once</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_url_scheme</td><td style="vertical-align:top;">:</td><td><div>http</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_version</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div>1</div></td></tr><tr><td><div>0</div></td></tr></table></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">extension</td><td style="vertical-align:top;">:</td><td><div>html</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">folder</td><td style="vertical-align:top;">:</td><td><div>/Users/dex/Copy/web2py/applications/star/</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">function</td><td style="vertical-align:top;">:</td><td><div>index</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">global_settings</td><td style="vertical-align:top;">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top;">app_folders</td><td style="vertical-align:top;">:</td><td><div>set([&#x27;/Users/dex/Copy/web2py/applications/init/&#x27;, &#x27;/Users/dex/Copy/web2py/applications/star/&#x27;])</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">applications_parent</td><td style="vertical-align:top;">:</td><td><div>/Users/dex/Copy/web2py</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">cmd_args</td><td style="vertical-align:top;">:</td><td><div><table></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">cmd_options</td><td style="vertical-align:top;">:</td><td><div>&lt;Values at 0x1041783f8: {&#x27;verbose&#x27;: False, &#x27;ip&#x27;: &#x27;127.0.0.1&#x27;, &#x27;debuglevel&#x27;: 30, &#x27;with_scheduler&#x27;: False, &#x27;ips&#x27;: [], &#x27;shutdown_timeout&#x27;: 5, &#x27;taskbar&#x27;: False, &#x27;with_coverage&#x27;: False, &#x27;port&#x27;: 8000, &#x27;maxthreads&#x27;: None, &#x27;softcron&#x27;: False, &#x27;server_name&#x27;: &#x27;dex-mbp10_8&#x27;, &#x27;bpython&#x27;: False, &#x27;nogui&#x27;: False, &#x27;pid_filename&#x27;: &#x27;httpserver.pid&#x27;, &#x27;extcron&#x27;: False, &#x27;runcron&#x27;: False, &#x27;run_system_tests&#x27;: False, &#x27;test&#x27;: None, &#x27;folder&#x27;: &#x27;/Users/dex/Copy/web2py&#x27;, &#x27;config&#x27;: &#x27;&#x27;, &#x27;minthreads&#x27;: None, &#x27;shell&#x27;: None, &#x27;run&#x27;: &#x27;&#x27;, &#x27;log_filename&#x27;: &#x27;httpserver.log&#x27;, &#x27;profiler_dir&#x27;: None, &#x27;args&#x27;: [&#x27;&#x27;], &#x27;socket_timeout&#x27;: 5, &#x27;ssl_ca_certificate&#x27;: None, &#x27;scheduler&#x27;: None, &#x27;interfaces&#x27;: None, &#x27;ssl_private_key&#x27;: &#x27;&#x27;, &#x27;scheduler_groups&#x27;: None, &#x27;password&#x27;: &#x27;&lt;ask&gt;&#x27;, &#x27;request_queue_size&#x27;: 5, &#x27;ssl_certificate&#x27;: &#x27;&#x27;, &#x27;cronjob&#x27;: False, &#x27;numthreads&#x27;: None, &#x27;quiet&#x27;: False, &#x27;import_models&#x27;: False, &#x27;timeout&#x27;: 10, &#x27;plain&#x27;: False, &#x27;nobanner&#x27;: False}&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">db_sessions</td><td style="vertical-align:top;">:</td><td><div>set([])</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">debugging</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">gluon_parent</td><td style="vertical-align:top;">:</td><td><div>/Users/dex/Copy/web2py</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_jython</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_pypy</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_source</td><td style="vertical-align:top;">:</td><td><div>True</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">local_hosts</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div>dex-mbp10_8</div></td></tr><tr><td><div>::1</div></td></tr><tr><td><div>::ffff:127.0.0.1</div></td></tr><tr><td><div>127.0.0.1</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">web2py_version</td><td style="vertical-align:top;">:</td><td><div>2.9.5-stable+timestamp.2014.03.16.02.35.39</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_https</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_local</td><td style="vertical-align:top;">:</td><td><div>True</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_restful</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">now</td><td style="vertical-align:top;">:</td><td><div>datetime.datetime(2014, 7, 11, 10, 10, 15, 333398)</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">raw_args</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">raw_extension</td><td style="vertical-align:top;">:</td><td><div>None</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">url</td><td style="vertical-align:top;">:</td><td><div>/star</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">utcnow</td><td style="vertical-align:top;">:</td><td><div>datetime.datetime(2014, 7, 11, 17, 10, 15, 333415)</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">uuid</td><td style="vertical-align:top;">:</td><td><div>star/127.0.0.1.2014-07-11.10-10-15.4d65422c-f210-4d23-af7e-229d0f253d6f</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi</td><td style="vertical-align:top;">:</td><td><div>&lt;gluon.main.LazyWSGI object at 0x10e98c150&gt;</div></td></tr></table></div>'
tRp62
sS'frames'
p63
(lp64
(dp65
S'file'
p66
S'/Users/dex/Copy/web2py/gluon/restricted.py'
p67
sS'dump'
p68
(dp69
S'environment'
p70
S"{'A': <class 'gluon.html.A'>, 'ANY_OF': <class 'gluon.validators.ANY_OF'>, 'Annotation': <Table annotation (id,name,description,is_active,created_on,created_by,modified_on,modified_by)>, 'Auth': <class 'gluon.tools.Auth'>, 'B': <class 'gluon.html.B'>, 'BEAUTIFY': <class 'gluon.html.BEAUTIFY'>, 'BODY': <class 'gluon.html.BODY'>, 'BR': <class 'gluon.html.BR'>, 'BUTTON': <class 'gluon.html.BUTTON'>, 'CAT': <class 'gluon.html.CAT'>, ...}"
p71
sS'ccode'
p72
S'<code object <module> at 0x10e96d7b0, file "/Use...eb2py/applications/star/models/my_db.py", line 1>'
p73
ssS'lnum'
p74
I220
sS'lines'
p75
(dp76
I224
S'        # do not encapsulate (obfuscate) the original RestrictedError'
p77
sI215
S'    try:'
p78
sI216
S'        if isinstance(code, types.CodeType):'
p79
sI217
S'            ccode = code'
p80
sI218
S'        else:'
p81
sI219
S'            ccode = compile2(code, layer)'
p82
sI220
S'        exec ccode in environment'
p83
sI221
S'    except HTTP:'
p84
sI222
S'        raise'
p85
sI223
S'    except RestrictedError:'
p86
ssS'call'
p87
S'(code=\'__author__ = \\\'dex\\\'\\nresponse.generic_patterns = [...              migrate="sample_annotation.table"\\n)\', environment={\'A\': <class \'gluon.html.A\'>, \'ANY_OF\': <class \'gluon.validators.ANY_OF\'>, \'Annotation\': <Table annotation (id,name,description,is_active,created_on,created_by,modified_on,modified_by)>, \'Auth\': <class \'gluon.tools.Auth\'>, \'B\': <class \'gluon.html.B\'>, \'BEAUTIFY\': <class \'gluon.html.BEAUTIFY\'>, \'BODY\': <class \'gluon.html.BODY\'>, \'BR\': <class \'gluon.html.BR\'>, \'BUTTON\': <class \'gluon.html.BUTTON\'>, \'CAT\': <class \'gluon.html.CAT\'>, ...}, layer=\'/Users/dex/Copy/web2py/applications/star/models/my_db.py\')'
p88
sS'func'
p89
S'restricted'
p90
sa(dp91
g66
S'/Users/dex/Copy/web2py/applications/star/models/my_db.py'
p92
sg68
(dp93
S'migrate'
p94
S'undefined'
p95
ssg74
I69
sg75
(dp96
I64
S"                                   Field('platform_id', 'reference platform'),"
p97
sI65
S"                                   Field('annotation_id', 'reference annotation'),"
p98
sI66
S"                                   Field('col'),"
p99
sI67
S"                                   Field('regex'),"
p100
sI68
S"                                   format='%(col)s_%(regex)s',"
p101
sI69
S'                                   migrate="series_annotation.table"'
p102
sI70
S')'
sI71
S''
sI72
S"Sample_Annotation = db.define_table('sample_annotation',"
p103
sI73
S"                                    Field('series_annotation_id', 'reference series_annotation'),"
p104
ssg87
S'()'
p105
sg89
S'<module>'
p106
sa(dp107
g66
S'/Users/dex/Copy/web2py/gluon/dal.py'
p108
sg68
(dp109
S'fields'
p110
S'(<gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>)'
p111
sS'self'
p112
S'<DAL uri="postgres:******@localhost/star">'
p113
sS'args'
p114
S"{'format': '%(col)s_%(regex)s', 'migrate': 'series_annotation.table'}"
p115
sS'tablename'
p116
S"'series_annotation'"
p117
sS'table'
p118
g95
sS'self.lazy_define_table'
p119
S'<bound method DAL.lazy_define_table of <DAL uri="postgres:******@localhost/star">>'
p120
ssg74
I8223
sg75
(dp121
I8224
S'        if not tablename in self.tables:'
p122
sI8225
S'            self.tables.append(tablename)'
p123
sI8226
S'        return table'
p124
sI8227
S''
sI8218
S'                    % (tablename,invalid_args))'
p125
sI8219
S'        if self._lazy_tables and not tablename in self._LAZY_TABLES:'
p126
sI8220
S'            self._LAZY_TABLES[tablename] = (tablename,fields,args)'
p127
sI8221
S'            table = None'
p128
sI8222
S'        else:'
p129
sI8223
S'            table = self.lazy_define_table(tablename,*fields,**args)'
p130
ssg87
S'(self=<DAL uri="postgres:******@localhost/star">, tablename=\'series_annotation\', *fields=(<gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>), **args={\'format\': \'%(col)s_%(regex)s\', \'migrate\': \'series_annotation.table\'})'
p131
sg89
S'define_table'
p132
sa(dp133
g66
S'/Users/dex/Copy/web2py/gluon/dal.py'
p134
sg68
(dp135
S'polymodel'
p136
S'None'
p137
ssg74
I8260
sg75
(dp138
I8256
S'                GLOBAL_LOCKER.acquire()'
p139
sI8257
S'                self._lastsql = self._adapter.create_table('
p140
sI8258
S'                    table,migrate=migrate,'
p141
sI8259
S'                    fake_migrate=fake_migrate,'
p142
sI8260
S'                    polymodel=polymodel)'
p143
sI8261
S'            finally:'
p144
sI8262
S'                GLOBAL_LOCKER.release()'
p145
sI8263
S'        else:'
p146
sI8264
S'            table._dbt = None'
p147
sI8255
S'            try:'
p148
ssg87
S'(self=<DAL uri="postgres:******@localhost/star">, tablename=\'series_annotation\', *fields=[<gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <Table auth_signature (id,is_active,created_on,created_by,modified_on,modified_by)>], **args={\'format\': \'%(col)s_%(regex)s\', \'migrate\': \'series_annotation.table\'})'
p149
sg89
S'lazy_define_table'
p150
sa(dp151
g66
S'/Users/dex/Copy/web2py/gluon/dal.py'
p152
sg68
(dp153
S'fake_migrate'
p154
S'False'
p155
ssg74
I1132
sg75
(dp156
I1127
S'            if sql_fields != sql_fields_old:'
p157
sI1128
S'                self.migrate_table('
p158
sI1129
S'                    table,'
p159
sI1130
S'                    sql_fields, sql_fields_old,'
p160
sI1131
S'                    sql_fields_aux, None,'
p161
sI1132
S'                    fake_migrate=fake_migrate'
p162
sI1133
S'                    )'
p163
sI1134
S'        return query'
p164
sI1135
S''
sI1136
S'    def migrate_table('
p165
ssg87
S"(self=<gluon.dal.PostgreSQLAdapter object>, table=<Table series_annotation (id,series_id,platform_...e,created_on,created_by,modified_on,modified_by)>, migrate='series_annotation.table', fake_migrate=False, polymodel=None)"
p166
sg89
S'create_table'
p167
sa(dp168
g66
S'/Users/dex/Copy/web2py/gluon/dal.py'
p169
sg68
(dp170
S'self'
p171
S'<gluon.dal.PostgreSQLAdapter object>'
p172
sS'self.execute'
p173
S'<bound method PostgreSQLAdapter.execute of <gluon.dal.PostgreSQLAdapter object>>'
p174
sS'sub_query'
p175
S"'ALTER TABLE series_annotation ADD platform_id INTEGER REFERENCES platform (id) ON DELETE CASCADE;'"
p176
ssg74
I1245
sg75
(dp177
I1248
S'                        # in one transaction so we must commit'
p178
sI1249
S'                        # partial transactions and'
p179
sI1240
S'                    if fake_migrate:'
p180
sI1241
S'                        if db._adapter.commit_on_alter_table:'
p181
sI1242
S'                            self.save_dbt(table,sql_fields_current)'
p182
sI1243
S"                        self.log('faked!\\n', table)"
p183
sI1244
S'                    else:'
p184
sI1245
S'                        self.execute(sub_query)'
p185
sI1246
S'                        # Caveat: mysql, oracle and firebird'
p186
sI1247
S'                        # do not allow multiple alter table'
p187
ssg87
S"(self=<gluon.dal.PostgreSQLAdapter object>, table=<Table series_annotation (id,series_id,platform_...e,created_on,created_by,modified_on,modified_by)>, sql_fields={'annotation_id': {'length': 512, 'notnull': False, 'sortable': 4, 'sql': 'INTEGER REFERENCES annotation (id) ON DELETE CASCADE', 'type': 'reference annotation', 'unique': False}, 'col': {'length': 512, 'notnull': False, 'sortable': 5, 'sql': 'VARCHAR(512)', 'type': 'string', 'unique': False}, 'created_by': {'length': 512, 'notnull': False, 'sortable': 9, 'sql': 'INTEGER REFERENCES auth_user (id) ON DELETE CASCADE', 'type': 'reference auth_user', 'unique': False}, 'created_on': {'length': 512, 'notnull': False, 'sortable': 8, 'sql': 'TIMESTAMP', 'type': 'datetime', 'unique': False}, 'id': {'length': 512, 'notnull': False, 'sortable': 1, 'sql': 'SERIAL PRIMARY KEY', 'type': 'id', 'unique': False}, 'is_active': {'length': 512, 'notnull': False, 'sortable': 7, 'sql': 'CHAR(1)', 'type': 'boolean', 'unique': False}, 'modified_by': {'length': 512, 'notnull': False, 'sortable': 11, 'sql': 'INTEGER REFERENCES auth_user (id) ON DELETE CASCADE', 'type': 'reference auth_user', 'unique': False}, 'modified_on': {'length': 512, 'notnull': False, 'sortable': 10, 'sql': 'TIMESTAMP', 'type': 'datetime', 'unique': False}, 'platform_id': {'length': 512, 'notnull': False, 'sortable': 3, 'sql': 'INTEGER REFERENCES platform (id) ON DELETE CASCADE', 'type': 'reference platform', 'unique': False}, 'regex': {'length': 512, 'notnull': False, 'sortable': 6, 'sql': 'VARCHAR(512)', 'type': 'string', 'unique': False}, ...}, sql_fields_old={'annotation_id': {'length': 512, 'notnull': False, 'sortable': 5, 'sql': 'INTEGER REFERENCES annotation (id) ON DELETE CASCADE', 'type': 'reference annotation', 'unique': False}, 'col': {'length': 512, 'notnull': False, 'sortable': 6, 'sql': 'VARCHAR(512)', 'type': 'string', 'unique': False}, 'created_by': {'length': 512, 'notnull': False, 'sortable': 10, 'sql': 'INTEGER REFERENCES auth_user (id) ON DELETE CASCADE', 'type': 'reference auth_user', 'unique': False}, 'created_on': {'length': 512, 'notnull': False, 'sortable': 9, 'sql': 'TIMESTAMP', 'type': 'datetime', 'unique': False}, 'gpl': {'length': 512, 'notnull': False, 'sortable': 4, 'sql': 'VARCHAR(512)', 'type': 'string', 'unique': False}, 'gse_name': {'length': 512, 'notnull': False, 'sortable': 3, 'sql': 'VARCHAR(512)', 'type': 'string', 'unique': False}, 'id': {'length': 512, 'notnull': False, 'sortable': 1, 'sql': 'SERIAL PRIMARY KEY', 'type': 'id', 'unique': False}, 'is_active': {'length': 512, 'notnull': False, 'sortable': 8, 'sql': 'CHAR(1)', 'type': 'boolean', 'unique': False}, 'modified_by': {'length': 512, 'notnull': False, 'sortable': 12, 'sql': 'INTEGER REFERENCES auth_user (id) ON DELETE CASCADE', 'type': 'reference auth_user', 'unique': False}, 'modified_on': {'length': 512, 'notnull': False, 'sortable': 11, 'sql': 'TIMESTAMP', 'type': 'datetime', 'unique': False}, ...}, sql_fields_aux={'annotation_id': {'sql': 'INTEGER REFERENCES annotation (id) ON DELETE CASCADE'}, 'col': {'sql': 'VARCHAR(512)'}, 'created_by': {'sql': 'INTEGER REFERENCES auth_user (id) ON DELETE CASCADE'}, 'created_on': {'sql': 'TIMESTAMP'}, 'id': {'sql': 'SERIAL PRIMARY KEY'}, 'is_active': {'sql': 'CHAR(1)'}, 'modified_by': {'sql': 'INTEGER REFERENCES auth_user (id) ON DELETE CASCADE'}, 'modified_on': {'sql': 'TIMESTAMP'}, 'platform_id': {'sql': 'INTEGER REFERENCES platform (id) ON DELETE CASCADE'}, 'regex': {'sql': 'VARCHAR(512)'}, ...}, logfile=None, fake_migrate=False)"
p188
sg89
S'migrate_table'
p189
sa(dp190
g66
S'/Users/dex/Copy/web2py/gluon/dal.py'
p191
sg68
(dp192
S'a'
S"('ALTER TABLE series_annotation ADD platform_id INTEGER REFERENCES platform (id) ON DELETE CASCADE;',)"
p193
sS'self'
p194
S'<gluon.dal.PostgreSQLAdapter object>'
p195
sS'b'
g21
sS'self.log_execute'
p196
S'<bound method PostgreSQLAdapter.log_execute of <gluon.dal.PostgreSQLAdapter object>>'
p197
ssg74
I1969
sg75
(dp198
I1964
S'        self.db._timings.append((command,time.time()-t0))'
p199
sI1965
S'        del self.db._timings[:-TIMINGSSIZE]'
p200
sI1966
S'        return ret'
p201
sI1967
S''
sI1968
S'    def execute(self, *a, **b):'
p202
sI1969
S'        return self.log_execute(*a, **b)'
p203
sI1970
S''
sI1971
S'    def represent(self, obj, fieldtype):'
p204
sI1972
S'        field_is_type = fieldtype.startswith'
p205
sI1973
S'        if isinstance(obj, CALLABLETYPES):'
p206
ssg87
S"(self=<gluon.dal.PostgreSQLAdapter object>, *a=('ALTER TABLE series_annotation ADD platform_id INTEGER REFERENCES platform (id) ON DELETE CASCADE;',), **b={})"
p207
sg89
S'execute'
p208
sa(dp209
g66
S'/Users/dex/Copy/web2py/gluon/dal.py'
p210
sg68
(dp211
S'a'
S"('ALTER TABLE series_annotation ADD platform_id INTEGER REFERENCES platform (id) ON DELETE CASCADE;',)"
p212
sS'b'
g21
sS'self'
p213
S'<gluon.dal.PostgreSQLAdapter object>'
p214
sS'ret'
p215
g95
sS'self.cursor'
p216
S'<gluon.contrib.pg8000.dbapi.CursorWrapper object>'
p217
sS'command'
p218
S"'ALTER TABLE series_annotation ADD platform_id INTEGER REFERENCES platform (id) ON DELETE CASCADE;'"
p219
sS'self.cursor.execute'
p220
S'<bound method CursorWrapper._fn of <gluon.contrib.pg8000.dbapi.CursorWrapper object>>'
p221
ssg74
I1963
sg75
(dp222
I1958
S'            command = self.filter_sql_command(command)'
p223
sI1959
S'        if self.db._debug:'
p224
sI1960
S"            LOGGER.debug('SQL: %s' % command)"
p225
sI1961
S'        self.db._lastsql = command'
p226
sI1962
S'        t0 = time.time()'
p227
sI1963
S'        ret = self.cursor.execute(command, *a[1:], **b)'
p228
sI1964
S'        self.db._timings.append((command,time.time()-t0))'
p229
sI1965
S'        del self.db._timings[:-TIMINGSSIZE]'
p230
sI1966
S'        return ret'
p231
sI1967
S''
ssg87
S"(self=<gluon.dal.PostgreSQLAdapter object>, *a=('ALTER TABLE series_annotation ADD platform_id INTEGER REFERENCES platform (id) ON DELETE CASCADE;',), **b={})"
p232
sg89
S'log_execute'
p233
sa(dp234
g66
S'/Users/dex/Copy/web2py/gluon/contrib/pg8000/dbapi.py'
p235
sg68
(dp236
S'self'
p237
S'<gluon.contrib.pg8000.dbapi.CursorWrapper object>'
p238
sS'args'
p239
S"('ALTER TABLE series_annotation ADD platform_id INTEGER REFERENCES platform (id) ON DELETE CASCADE;',)"
p240
sS'fn'
p241
S'<function execute>'
p242
sS'kwargs'
p243
g21
ssg74
I246
sg75
(dp244
I241
S''
sI242
S'def require_open_cursor(fn):'
p245
sI243
S'    def _fn(self, *args, **kwargs):'
p246
sI244
S'        if self.cursor == None:'
p247
sI245
S'            raise CursorClosedError()'
p248
sI246
S'        return fn(self, *args, **kwargs)'
p249
sI247
S'    return _fn'
p250
sI248
S''
sI249
S'##'
p251
sI250
S'# The class of object returned by the {@link #ConnectionWrapper.cursor cursor method}.'
p252
ssg87
S"(self=<gluon.contrib.pg8000.dbapi.CursorWrapper object>, *args=('ALTER TABLE series_annotation ADD platform_id INTEGER REFERENCES platform (id) ON DELETE CASCADE;',), **kwargs={})"
p253
sg89
S'_fn'
p254
sa(dp255
g66
S'/Users/dex/Copy/web2py/gluon/contrib/pg8000/dbapi.py'
p256
sg68
(dp257
S'self._execute'
p258
S'<bound method CursorWrapper._execute of <gluon.contrib.pg8000.dbapi.CursorWrapper object>>'
p259
sS'self'
p260
S'<gluon.contrib.pg8000.dbapi.CursorWrapper object>'
p261
sS'args'
p262
S'()'
p263
sS'operation'
p264
S"'ALTER TABLE series_annotation ADD platform_id INTEGER REFERENCES platform (id) ON DELETE CASCADE;'"
p265
ssg74
I317
sg75
(dp266
I320
S'        new_query, new_args = convert_paramstyle(paramstyle, operation, args)'
p267
sI321
S'        try:'
p268
sI312
S'    @require_open_cursor'
p269
sI313
S'    def execute(self, operation, args=()):'
p270
sI314
S'        if not self._connection.in_transaction:'
p271
sI315
S'            self._connection.begin()'
p272
sI316
S'        self._override_rowcount = None'
p273
sI317
S'        self._execute(operation, args)'
p274
sI318
S''
sI319
S'    def _execute(self, operation, args=()):'
p275
ssg87
S"(self=<gluon.contrib.pg8000.dbapi.CursorWrapper object>, operation='ALTER TABLE series_annotation ADD platform_id INTEGER REFERENCES platform (id) ON DELETE CASCADE;', args=())"
p276
sg89
g208
sa(dp277
g66
S'/Users/dex/Copy/web2py/gluon/contrib/pg8000/dbapi.py'
p278
sg68
(dp279
S'new_args'
p280
S'()'
p281
sS'self.cursor'
p282
S'<gluon.contrib.pg8000.interface.Cursor object>'
p283
sS'self'
p284
S'<gluon.contrib.pg8000.dbapi.CursorWrapper object>'
p285
sS'new_query'
p286
S"'ALTER TABLE series_annotation ADD platform_id INTEGER REFERENCES platform (id) ON DELETE CASCADE;'"
p287
sS'self.cursor.execute'
p288
S'<bound method Cursor.execute of <gluon.contrib.pg8000.interface.Cursor object>>'
p289
ssg74
I322
sg75
(dp290
I320
S'        new_query, new_args = convert_paramstyle(paramstyle, operation, args)'
p291
sI321
S'        try:'
p292
sI322
S'            self.cursor.execute(new_query, *new_args)'
p293
sI323
S'        except ConnectionClosedError:'
p294
sI324
S"            # can't rollback in this case"
p295
sI325
S'            raise'
p296
sI326
S'        except:'
p297
sI317
S'        self._execute(operation, args)'
p298
sI318
S''
sI319
S'    def _execute(self, operation, args=()):'
p299
ssg87
S"(self=<gluon.contrib.pg8000.dbapi.CursorWrapper object>, operation='ALTER TABLE series_annotation ADD platform_id INTEGER REFERENCES platform (id) ON DELETE CASCADE;', args=())"
p300
sg89
S'_execute'
p301
sa(dp302
g66
S'/Users/dex/Copy/web2py/gluon/contrib/pg8000/interface.py'
p303
sg68
(dp304
S'self._stmt.execute'
p305
S'<bound method PreparedStatement.execute of <gluo...ntrib.pg8000.interface.PreparedStatement object>>'
p306
sS'kwargs'
p307
g21
sS'self'
p308
S'<gluon.contrib.pg8000.interface.Cursor object>'
p309
sS'args'
p310
S'()'
p311
sS'self._stmt'
p312
S'<gluon.contrib.pg8000.interface.PreparedStatement object>'
p313
ssg74
I399
sg75
(dp314
I394
S'                ## print "SimpleQuery:", query'
p315
sI395
S'                self._stmt = SimpleStatement(self.connection, query)'
p316
sI396
S'            else:'
p317
sI397
S'                # use PostgreSQL Extended Query Protocol'
p318
sI398
S'                self._stmt = PreparedStatement(self.connection, query, statement_name="", *[{"type": type(x), "value": x} for x in args])'
p319
sI399
S'            self._stmt.execute(*args, **kwargs)'
p320
sI400
S'        finally:'
p321
sI401
S'            self.connection._unnamed_prepared_statement_lock.release()'
p322
sI402
S''
sI403
S'    ##'
p323
ssg87
S"(self=<gluon.contrib.pg8000.interface.Cursor object>, query='ALTER TABLE series_annotation ADD platform_id INTEGER REFERENCES platform (id) ON DELETE CASCADE;', *args=(), **kwargs={})"
p324
sg89
g208
sa(dp325
g66
S'/Users/dex/Copy/web2py/gluon/contrib/pg8000/interface.py'
p326
sg68
(dp327
S'kwargs.get'
p328
S'<built-in method get of dict object>'
p329
sS'args'
p330
S'()'
p331
sS'self.c'
p332
S'<gluon.contrib.pg8000.protocol.Connection object>'
p333
sS'self'
p334
S'<gluon.contrib.pg8000.interface.PreparedStatement object>'
p335
sS'cmd'
p336
g95
sS'self._row_desc'
p337
S'None'
p338
sS'self.c.bind'
p339
S'<bound method Connection._fn of <gluon.contrib.pg8000.protocol.Connection object>>'
p340
sS'self._statement_name'
p341
S"''"
p342
sS'self._parse_row_desc'
p343
S'(None, [])'
p344
sS'kwargs'
p345
g21
sS'self._portal_name'
p346
S"'pg8000_portal_16'"
p347
ssg74
I169
sg75
(dp348
I164
S'                self._ongoing_row_count = 0'
p349
sI165
S'            if self._portal_name != None:'
p350
sI166
S'                self.c.close_portal(self._portal_name)'
p351
sI167
S'            self._command_complete = False'
p352
sI168
S'            self._portal_name = "pg8000_portal_%s" % self._statement_number'
p353
sI169
S'            self._row_desc, cmd = self.c.bind(self._portal_name, self._statement_name, args, self._parse_row_desc, kwargs.get("stream"))'
p354
sI170
S'            if self._row_desc:'
p355
sI171
S'                # We execute our cursor right away to fill up our cache.  This'
p356
sI172
S'                # prevents the cursor from being destroyed, apparently, by a rogue'
p357
sI173
S'                # Sync between Bind and Execute.  Since it is quite likely that'
p358
ssg87
S'(self=<gluon.contrib.pg8000.interface.PreparedStatement object>, *args=(), **kwargs={})'
p359
sg89
g208
sa(dp360
g66
S'/Users/dex/Copy/web2py/gluon/contrib/pg8000/protocol.py'
p361
sg68
(dp362
S'self'
p363
S'<gluon.contrib.pg8000.protocol.Connection object>'
p364
sS'args'
p365
S"('pg8000_portal_16', '', (), (None, []), None)"
p366
sS'fn'
p367
S'<function bind>'
p368
sS'kwargs'
p369
g21
ssg74
I943
sg75
(dp370
I938
S''
sI939
S'def sync_on_error(fn):'
p371
sI940
S'    def _fn(self, *args, **kwargs):'
p372
sI941
S'        try:'
p373
sI942
S'            self._sock_lock.acquire()'
p374
sI943
S'            return fn(self, *args, **kwargs)'
p375
sI944
S'        except:'
p376
sI945
S'            self._sync()'
p377
sI946
S'            raise'
p378
sI947
S'        finally:'
p379
ssg87
S"(self=<gluon.contrib.pg8000.protocol.Connection object>, *args=('pg8000_portal_16', '', (), (None, []), None), **kwargs={})"
p380
sg89
g254
sa(dp381
g66
S'/Users/dex/Copy/web2py/gluon/contrib/pg8000/protocol.py'
p382
sg68
(dp383
S'reader.handle_messages'
p384
S'<bound method MessageReader.handle_messages of <gluon.contrib.pg8000.protocol.MessageReader object>>'
p385
sS'reader'
p386
S'<gluon.contrib.pg8000.protocol.MessageReader object>'
p387
ssg74
I1142
sg75
(dp388
I1137
S''
sI1138
S'        # Return the new row desc, since it will have the format types we'
p389
sI1139
S'        # asked the server for'
p390
sI1140
S'        reader.add_message(RowDescription, lambda msg: (msg, None))'
p391
sI1141
S''
sI1142
S'        return reader.handle_messages()'
p392
sI1143
S''
sI1144
S'    def _copy_in_response(self, copyin, fileobj, old_reader):'
p393
sI1145
S'        if fileobj == None:'
p394
sI1146
S'            raise CopyQueryWithoutStreamError()'
p395
ssg87
S"(self=<gluon.contrib.pg8000.protocol.Connection object>, portal='pg8000_portal_16', statement='', params=(), parse_data=(None, []), copy_stream=None)"
p396
sg89
S'bind'
p397
sa(dp398
g66
S'/Users/dex/Copy/web2py/gluon/contrib/pg8000/protocol.py'
p399
sg68
(dp400
S'msg'
p401
S'<gluon.contrib.pg8000.protocol.NoData object>'
p402
sS'handler'
p403
S'<bound method Connection._bind_nodata of <gluon.contrib.pg8000.protocol.Connection object>>'
p404
sS'retval'
p405
S'0'
sS'args'
p406
S"('pg8000_portal_16', <gluon.contrib.pg8000.protocol.MessageReader object>, None)"
p407
sS'kwargs'
p408
g21
ssg74
I911
sg75
(dp409
I906
S'            msg = self._conn._read_message()'
p410
sI907
S'            msg_handled = False'
p411
sI908
S'            for (msg_class, handler, args, kwargs) in self._msgs:'
p412
sI909
S'                if isinstance(msg, msg_class):'
p413
sI910
S'                    msg_handled = True'
p414
sI911
S'                    retval = handler(msg, *args, **kwargs)'
p415
sI912
S'                    if retval:'
p416
sI913
S'                        # The handler returned a true value, meaning that the'
p417
sI914
S'                        # message loop should be aborted.'
p418
sI915
S'                        if exc != None:'
p419
ssg87
S'(self=<gluon.contrib.pg8000.protocol.MessageReader object>)'
p420
sg89
S'handle_messages'
p421
sa(dp422
g66
S'/Users/dex/Copy/web2py/gluon/contrib/pg8000/protocol.py'
p423
sg68
(dp424
S'reader.handle_messages'
p425
S'<bound method MessageReader.handle_messages of <gluon.contrib.pg8000.protocol.MessageReader object>>'
p426
sS'reader'
p427
S'<gluon.contrib.pg8000.protocol.MessageReader object>'
p428
ssg74
I1181
sg75
(dp429
I1184
S''
sI1185
S'    @sync_on_error'
p430
sI1176
S'        reader.add_message(CopyOutResponse, self._copy_out_response, copy_stream, reader)'
p431
sI1177
S'        reader.add_message(CopyInResponse, self._copy_in_response, copy_stream, reader)'
p432
sI1178
S"        reader.add_message(CommandComplete, lambda msg, out: out.setdefault('msg', msg) and False, output)"
p433
sI1179
S'        reader.add_message(ReadyForQuery, lambda msg: 1)'
p434
sI1180
S'        reader.delay_raising_exception = True'
p435
sI1181
S'        reader.handle_messages()'
p436
sI1182
S''
sI1183
S"        old_reader.return_value((None, output['msg']))"
p437
ssg87
S"(self=<gluon.contrib.pg8000.protocol.Connection object>, msg=<gluon.contrib.pg8000.protocol.NoData object>, portal='pg8000_portal_16', old_reader=<gluon.contrib.pg8000.protocol.MessageReader object>, copy_stream=None)"
p438
sg89
S'_bind_nodata'
p439
sa(dp440
g66
S'/Users/dex/Copy/web2py/gluon/contrib/pg8000/protocol.py'
p441
sg68
(dp442
S'exc'
p443
S'ProgrammingError(\'ERROR\', \'42P01\', \'relation "series_annotation" does not exist\')'
p444
ssg74
I916
sg75
(dp445
I911
S'                    retval = handler(msg, *args, **kwargs)'
p446
sI912
S'                    if retval:'
p447
sI913
S'                        # The handler returned a true value, meaning that the'
p448
sI914
S'                        # message loop should be aborted.'
p449
sI915
S'                        if exc != None:'
p450
sI916
S'                            raise exc'
p451
sI917
S'                        return retval'
p452
sI918
S'                    elif hasattr(self, "_retval"):'
p453
sI919
S'                        # The handler told us to return -- used for non-true'
p454
sI920
S'                        # return values'
p455
ssg87
S'(self=<gluon.contrib.pg8000.protocol.MessageReader object>)'
p456
sg89
g421
sasS'pyver'
p457
S'Python 2.7.7: /Users/dex/anaconda/bin/python (prefix: /Users/dex/anaconda)'
p458
sS'session'
p459
g61
(S's\x1a\x00\x00\x00<div><table></table></div>'
tRp460
sS'etype'
p461
S"<class 'gluon.contrib.pg8000.errors.ProgrammingError'>"
p462
sS'date'
p463
S'Fri Jul 11 10:10:15 2014'
p464
sS'response'
p465
g61
(S's:1\x00\x00<div><table><tr><td style="font-weight:bold;vertical-align:top;">body</td><td style="vertical-align:top;">:</td><td><div>&lt;cStringIO.StringO object at 0x10e95df10&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">cookies</td><td style="vertical-align:top;">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top;">session_id_star</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1-4fe8bfd0-8ce0-4bac-98a0-6f75c95c8d99<table><tr><td style="font-weight:bold;vertical-align:top;">comment</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">domain</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">expires</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">httponly</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">max-age</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">path</td><td style="vertical-align:top;">:</td><td><div>/</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">secure</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">version</td><td style="vertical-align:top;">:</td><td><div></div></td></tr></table></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">delimiters</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div>{{</div></td></tr><tr><td><div>}}</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">files</td><td style="vertical-align:top;">:</td><td><div><table></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">flash</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">generic_patterns</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div>.html</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">google_analytics_id</td><td style="vertical-align:top;">:</td><td><div>None</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">headers</td><td style="vertical-align:top;">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top;">X-Powered-By</td><td style="vertical-align:top;">:</td><td><div>web2py</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">logo</td><td style="vertical-align:top;">:</td><td><div><a class="brand" href="http://www.web2py.com/"><b>web<span>2</span>py</b>&trade;&nbsp;</a></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">menu</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div><table><tr><td><div>Home</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>/star/default/index</div></td></tr><tr><td><div><table></table></div></td></tr></table></div></td></tr><tr><td><div><table><tr><td><div><span class="highlighted">web2py</span></div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>http://web2py.com</div></td></tr><tr><td><div><table><tr><td><div><table><tr><td><div>My Sites</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>/admin/default/site</div></td></tr></table></div></td></tr><tr><td><div><table><tr><td><div>This App</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>/admin/default/design/star</div></td></tr><tr><td><div>[(&lt;lazyT &#x27;Controller&#x27;&gt;, False, &#x27;/admin/default/edit/star/controllers/default.py&#x27;), (&lt;lazyT &#x27;View&#x27;&gt;, False, &#x27;/admin/default/edit/star/views/default/index.html&#x27;), (&lt;lazyT &#x27;Layout&#x27;&gt;, False, &#x27;/admin/default/edit/star/views/layout.html&#x27;), (&lt;lazyT &#x27;Stylesheet&#x27;&gt;, False, &#x27;/admin/default/edit/star/static/css/web2py.css&#x27;), (&lt;lazyT &#x27;DB Model&#x27;&gt;, False, &#x27;/admin/default/edit/star/models/db.py&#x27;), (&lt;lazyT &#x27;Menu Model&#x27;&gt;, False, &#x27;/admin/default/edit/star/models/menu.py&#x27;), (&lt;lazyT &#x27;Database&#x27;&gt;, False, &#x27;/star/appadmin/index&#x27;), (&lt;lazyT &#x27;Errors&#x27;&gt;, False, &#x27;/admin/default/errors/star&#x27;), (&lt;lazyT &#x27;About&#x27;&gt;, False, &#x27;/admin/default/about/star&#x27;)]</div></td></tr></table></div></td></tr><tr><td><div><table><tr><td><div>web2py.com</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>http://www.web2py.com</div></td></tr><tr><td><div>[(&lt;lazyT &#x27;Download&#x27;&gt;, False, &#x27;http://www.web2py.com/examples/default/download&#x27;), (&lt;lazyT &#x27;Support&#x27;&gt;, False, &#x27;http://www.web2py.com/examples/default/support&#x27;), (&lt;lazyT &#x27;Demo&#x27;&gt;, False, &#x27;http://web2py.com/demo_admin&#x27;), (&lt;lazyT &#x27;Quick Examples&#x27;&gt;, False, &#x27;http://web2py.com/examples/default/examples&#x27;), (&lt;lazyT &#x27;FAQ&#x27;&gt;, False, &#x27;http://web2py.com/AlterEgo&#x27;), (&lt;lazyT &#x27;Videos&#x27;&gt;, False, &#x27;http://www.web2py.com/examples/default/videos/&#x27;), (&lt;lazyT &#x27;Free Applications&#x27;&gt;, False, &#x27;http://web2py.com/appliances&#x27;), (&lt;lazyT &#x27;Plugins&#x27;&gt;, False, &#x27;http://web2py.com/plugins&#x27;), (&lt;lazyT &#x27;Layouts&#x27;&gt;, False, &#x27;http://web2py.com/layouts&#x27;), (&lt;lazyT &#x27;Recipes&#x27;&gt;, False, &#x27;http://web2pyslices.com/&#x27;), (&lt;lazyT &#x27;Semantic&#x27;&gt;, False, &#x27;http://web2py.com/semantic&#x27;)]</div></td></tr></table></div></td></tr><tr><td><div><table><tr><td><div>Documentation</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>http://www.web2py.com/book</div></td></tr><tr><td><div>[(&lt;lazyT &#x27;Preface&#x27;&gt;, False, &#x27;http://www.web2py.com/book/default/chapter/00&#x27;), (&lt;lazyT &#x27;Introduction&#x27;&gt;, False, &#x27;http://www.web2py.com/book/default/chapter/01&#x27;), (&lt;lazyT &#x27;Python&#x27;&gt;, False, &#x27;http://www.web2py.com/book/default/chapter/02&#x27;), (&lt;lazyT &#x27;Overview&#x27;&gt;, False, &#x27;http://www.web2py.com/book/default/chapter/03&#x27;), (&lt;lazyT &#x27;The Core&#x27;&gt;, False, &#x27;http://www.web2py.com/book/default/chapter/04&#x27;), (&lt;lazyT &#x27;The Views&#x27;&gt;, False, &#x27;http://www.web2py.com/book/default/chapter/05&#x27;), (&lt;lazyT &#x27;Database&#x27;&gt;, False, &#x27;http://www.web2py.com/book/default/chapter/06&#x27;), (&lt;lazyT &#x27;Forms and Validators&#x27;&gt;, False, &#x27;http://www.web2py.com/book/default/chapter/07&#x27;), (&lt;lazyT &#x27;Email and SMS&#x27;&gt;, False, &#x27;http://www.web2py.com/book/default/chapter/08&#x27;), (&lt;lazyT &#x27;Access Control&#x27;&gt;, False, &#x27;http://www.web2py.com/book/default/chapter/09&#x27;), (&lt;lazyT &#x27;Services&#x27;&gt;, False, &#x27;http://www.web2py.com/book/default/chapter/10&#x27;), (&lt;lazyT &#x27;Ajax Recipes&#x27;&gt;, False, &#x27;http://www.web2py.com/book/default/chapter/11&#x27;), (&lt;lazyT &#x27;Components and Plugins&#x27;&gt;, False, &#x27;http://www.web2py.com/book/default/chapter/12&#x27;), (&lt;lazyT &#x27;Deployment Recipes&#x27;&gt;, False, &#x27;http://www.web2py.com/book/default/chapter/13&#x27;), (&lt;lazyT &#x27;Other Recipes&#x27;&gt;, False, &#x27;http://www.web2py.com/book/default/chapter/14&#x27;), (&lt;lazyT &#x27;Buy this book&#x27;&gt;, False, &#x27;http://stores.lulu.com/web2py&#x27;)]</div></td></tr></table></div></td></tr><tr><td><div><table><tr><td><div>Community</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>None</div></td></tr><tr><td><div>[(&lt;lazyT &#x27;Groups&#x27;&gt;, False, &#x27;http://www.web2py.com/examples/default/usergroups&#x27;), (&lt;lazyT &#x27;Twitter&#x27;&gt;, False, &#x27;http://twitter.com/web2py&#x27;), (&lt;lazyT &#x27;Live Chat&#x27;&gt;, False, &#x27;http://webchat.freenode.net/?channels=web2py&#x27;)]</div></td></tr></table></div></td></tr><tr><td><div><table><tr><td><div>Plugins</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>None</div></td></tr><tr><td><div>[(&#x27;plugin_wiki&#x27;, False, &#x27;http://web2py.com/examples/default/download&#x27;), (&lt;lazyT &#x27;Other Plugins&#x27;&gt;, False, &#x27;http://web2py.com/plugins&#x27;), (&lt;lazyT &#x27;Layout Plugins&#x27;&gt;, False, &#x27;http://web2py.com/layouts&#x27;)]</div></td></tr></table></div></td></tr></table></div></td></tr></table></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">meta</td><td style="vertical-align:top;">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top;">author</td><td style="vertical-align:top;">:</td><td><div>Your Name &lt;you@example.com&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">generator</td><td style="vertical-align:top;">:</td><td><div>Web2py Web Framework</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">keywords</td><td style="vertical-align:top;">:</td><td><div>web2py, python, framework</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">models_to_run</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div>^\\w+\\.py$</div></td></tr><tr><td><div>^default/\\w+\\.py$</div></td></tr><tr><td><div>^default/index/\\w+\\.py$</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">postprocessing</td><td style="vertical-align:top;">:</td><td><div><table></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_client</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_cookie_compression_level</td><td style="vertical-align:top;">:</td><td><div>None</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_cookie_expires</td><td style="vertical-align:top;">:</td><td><div>None</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_cookie_key</td><td style="vertical-align:top;">:</td><td><div>None</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_data_name</td><td style="vertical-align:top;">:</td><td><div>session_data_star</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_file</td><td style="vertical-align:top;">:</td><td><div>&lt;open file &#x27;/Users/dex/Copy/web2py/applications/star/sessions/127.0.0.1-4fe8bfd0-8ce0-4bac-98a0-6f75c95c8d99&#x27;, mode &#x27;rb+&#x27; at 0x10eac3f60&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_filename</td><td style="vertical-align:top;">:</td><td><div>/Users/dex/Copy/web2py/applications/star/sessions/127.0.0.1-4fe8bfd0-8ce0-4bac-98a0-6f75c95c8d99</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_hash</td><td style="vertical-align:top;">:</td><td><div>86c83505ec02ec7fa7e83e680340428e</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_id</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1-4fe8bfd0-8ce0-4bac-98a0-6f75c95c8d99</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_id_name</td><td style="vertical-align:top;">:</td><td><div>session_id_star</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_locked</td><td style="vertical-align:top;">:</td><td><div>True</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_masterapp</td><td style="vertical-align:top;">:</td><td><div>star</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_new</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_storage_type</td><td style="vertical-align:top;">:</td><td><div>file</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">status</td><td style="vertical-align:top;">:</td><td><div>200</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">subtitle</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">title</td><td style="vertical-align:top;">:</td><td><div>Star</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">view</td><td style="vertical-align:top;">:</td><td><div>default/index.html</div></td></tr></table></div>'
tRp466
sS'locals'
p467
(dp468
S'exc'
p469
S'ProgrammingError(\'ERROR\', \'42P01\', \'relation "series_annotation" does not exist\')'
p470
sS'msg_class'
p471
S"<class 'gluon.contrib.pg8000.protocol.ReadyForQuery'>"
p472
sS'self'
p473
S'<gluon.contrib.pg8000.protocol.MessageReader object>'
p474
sg46
S'()'
p475
sS'handler'
p476
S'<function <lambda>>'
p477
sS'kwargs'
p478
g21
sS'msg'
p479
S'<ReadyForQuery Idle in Failed Transaction>'
p480
sS'msg_handled'
p481
S'True'
p482
sS'retval'
p483
S'1'
sssS'traceback'
p484
S'Traceback (most recent call last):\n  File "/Users/dex/Copy/web2py/gluon/restricted.py", line 220, in restricted\n    exec ccode in environment\n  File "/Users/dex/Copy/web2py/applications/star/models/my_db.py", line 69, in <module>\n    migrate="series_annotation.table"\n  File "/Users/dex/Copy/web2py/gluon/dal.py", line 8223, in define_table\n    table = self.lazy_define_table(tablename,*fields,**args)\n  File "/Users/dex/Copy/web2py/gluon/dal.py", line 8260, in lazy_define_table\n    polymodel=polymodel)\n  File "/Users/dex/Copy/web2py/gluon/dal.py", line 1132, in create_table\n    fake_migrate=fake_migrate\n  File "/Users/dex/Copy/web2py/gluon/dal.py", line 1245, in migrate_table\n    self.execute(sub_query)\n  File "/Users/dex/Copy/web2py/gluon/dal.py", line 1969, in execute\n    return self.log_execute(*a, **b)\n  File "/Users/dex/Copy/web2py/gluon/dal.py", line 1963, in log_execute\n    ret = self.cursor.execute(command, *a[1:], **b)\n  File "/Users/dex/Copy/web2py/gluon/contrib/pg8000/dbapi.py", line 246, in _fn\n    return fn(self, *args, **kwargs)\n  File "/Users/dex/Copy/web2py/gluon/contrib/pg8000/dbapi.py", line 317, in execute\n    self._execute(operation, args)\n  File "/Users/dex/Copy/web2py/gluon/contrib/pg8000/dbapi.py", line 322, in _execute\n    self.cursor.execute(new_query, *new_args)\n  File "/Users/dex/Copy/web2py/gluon/contrib/pg8000/interface.py", line 399, in execute\n    self._stmt.execute(*args, **kwargs)\n  File "/Users/dex/Copy/web2py/gluon/contrib/pg8000/interface.py", line 169, in execute\n    self._row_desc, cmd = self.c.bind(self._portal_name, self._statement_name, args, self._parse_row_desc, kwargs.get("stream"))\n  File "/Users/dex/Copy/web2py/gluon/contrib/pg8000/protocol.py", line 943, in _fn\n    return fn(self, *args, **kwargs)\n  File "/Users/dex/Copy/web2py/gluon/contrib/pg8000/protocol.py", line 1142, in bind\n    return reader.handle_messages()\n  File "/Users/dex/Copy/web2py/gluon/contrib/pg8000/protocol.py", line 911, in handle_messages\n    retval = handler(msg, *args, **kwargs)\n  File "/Users/dex/Copy/web2py/gluon/contrib/pg8000/protocol.py", line 1181, in _bind_nodata\n    reader.handle_messages()\n  File "/Users/dex/Copy/web2py/gluon/contrib/pg8000/protocol.py", line 916, in handle_messages\n    raise exc\nProgrammingError: (\'ERROR\', \'42P01\', \'relation "series_annotation" does not exist\')\n'
p485
s.